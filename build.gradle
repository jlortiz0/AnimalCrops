plugins {
  id 'fabric-loom' version '0.11-SNAPSHOT'
  id 'maven-publish'
}

group = "knightminer"
archivesBaseName = "AnimalCrops"
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
  maven { url 'https://maven.shedaniel.me' }
  maven {
    url "https://maven.terraformersmc.com/releases/"
  }
}

configurations {
  deployerJars
}

version = "${minecraft_version}-${mod_version}"

sourceSets {
  main { resources {
    srcDirs "$rootDir/src/generated/resources"
    //But exclude the cache of the generated data from what gets built
    exclude '.cache'
  } }

  datagen {
    compileClasspath += main.compileClasspath
    runtimeClasspath += main.runtimeClasspath
    compileClasspath += main.output
    runtimeClasspath += main.output
  }
}

loom {
  accessWidenerPath = file("src/main/resources/animalcrops.accesswidener")
  runs {
    datagen {
      server()
      name "Data Generation"
      vmArg "-Dfabric-api.datagen"
      vmArg "-Dfabric-api.datagen.output-dir=${file("src/generated/resources")}"
      vmArg "-Dfabric-api.datagen.modid=animalcrops"
      runDir "build/datagen"
    }
  }
}

dependencies {
  // To change the versions see the gradle.properties file
  minecraft "com.mojang:minecraft:${project.minecraft_version}"
  mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
  modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
  modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

  modApi("me.shedaniel.cloth:cloth-config-fabric:6.4.90") {
    exclude(group: "net.fabricmc.fabric-api")
  }
  include "me.shedaniel.cloth:cloth-config-fabric:6.4.90"
  modImplementation "com.terraformersmc:modmenu:3.2.5"

  // compile against the JEI API but do not include it at runtime
  modCompileOnly("me.shedaniel:RoughlyEnoughItems-api-fabric:$rei_version")
  modCompileOnly("me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:$rei_version")
  // at runtime, use the full JEI jar for Forge
  modRuntimeOnly("me.shedaniel:RoughlyEnoughItems-fabric:$rei_version")

}

processResources {
  inputs.property "version", project.version

  filesMatching("fabric.mod.json") {
    expand "version": project.version
  }
}

// because the normal output has been made to be obfuscated
task sourcesJar(type: Jar) {
  from sourceSets.main.allJava
  classifier = 'sources'
}

artifacts {
  archives sourcesJar
}